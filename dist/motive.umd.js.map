{"version":3,"file":"motive.umd.js","sources":["../tmp/primitives.js","../tmp/convert.js","../tmp/regex.js","../tmp/validators/note.js","../tmp/validators/interval.js","../tmp/math.js","../tmp/circles.js","../tmp/utilities.js","../tmp/note.js","../tmp/validators/abc-note.js","../tmp/abc.js","../tmp/validators/key.js","../tmp/key.js","../tmp/interval.js","../tmp/pattern.js","../tmp/note-collection.js","../tmp/validators/chord.js","../tmp/palette.js","../tmp/chord.js","../tmp/index.js"],"sourcesContent":["export var operators = {\n    'b': -1,\n    '#': 1,\n    'x': 2\n};\nexport var steps = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n","import { operators } from './primitives';\nfunction accidentalToAlter(accidental) {\n    if (!accidental) {\n        return 0;\n    }\n    var totalSymbolValue = 0;\n    // look up the value of each symbol in the parsed accidental\n    for (var a = 0; a < accidental.length; a++) {\n        totalSymbolValue += operators[accidental[a]];\n    }\n    // add the total value of the accidental to alter\n    return totalSymbolValue;\n}\nfunction alterToAccidental(alter) {\n    if (typeof alter === 'undefined') {\n        throw new Error('Cannot convert alter to accidental, none given.');\n    }\n    if (alter === 0 || alter === null) {\n        return '';\n    }\n    var accidental = '';\n    while (alter < 0) {\n        accidental += 'b';\n        alter += 1;\n    }\n    while (alter > 1) {\n        accidental += 'x';\n        alter += -2;\n    }\n    while (alter > 0) {\n        accidental += '#';\n        alter += -1;\n    }\n    return accidental;\n}\nfunction mtof(midi) {\n    return Math.pow(2, ((midi - 69) / 12)) * 440;\n}\nexport { accidentalToAlter, alterToAccidental, mtof };\n","// this makes a validation function for a string type defined by 'name'\nfunction makeValidation(name, exp, parser) {\n    return function (input) {\n        if (typeof input !== 'string') {\n            throw new TypeError('Cannot validate ' + name + '. Input must be a string.');\n        }\n        var validate = function () {\n            return input.match(exp) ? true : false;\n        };\n        return {\n            valid: validate(),\n            parse: function () {\n                if (!validate()) {\n                    return false;\n                }\n                var captures = exp.exec(input);\n                return parser(captures);\n            }\n        };\n    };\n}\n;\nfunction splitStringByPattern(str, pattern) {\n    var output = [];\n    while (pattern.test(str)) {\n        var thisMatch = str.match(pattern);\n        output.push(thisMatch[0]);\n        str = str.slice(thisMatch[0].length);\n    }\n    return output;\n}\n;\nexport { makeValidation, splitStringByPattern };\n","import { makeValidation } from '../regex';\nfunction validateNoteName(noteName) {\n    var noteRegex = /^([A-G])(b+|\\#+|x+)?(\\-?[0-9]+)?$/;\n    return makeValidation('note', noteRegex, function (captures) {\n        return {\n            step: captures[1],\n            accidental: captures[2] ? captures[2] : '',\n            octave: captures[3] ? parseInt(captures[3], 10) : null\n        };\n    })(noteName);\n}\n;\nexport default validateNoteName;\n","import { makeValidation } from '../regex';\nfunction validateIntervalName(intervalName) {\n    var intervalRegex = /^(P|M|m|A+|d+)(\\d+|U)$/;\n    return makeValidation('interval', intervalRegex, function (captures) {\n        return {\n            quality: captures[1],\n            size: parseInt(captures[2], 10)\n        };\n    })(intervalName);\n}\n;\nexport default validateIntervalName;\n","var Circle = /** @class */ (function () {\n    function Circle(array) {\n        this.array = array;\n        this.size = array.length;\n    }\n    // define functions for simple circular lookup\n    // most instances will override these functions\n    //   with custom accessors\n    Circle.prototype.indexOf = function (item) {\n        return this.array.indexOf(item);\n    };\n    Circle.prototype.atIndex = function (index) {\n        return this.array[modulo(index, this.size)];\n    };\n    return Circle;\n}());\nfunction modulo(a, b) {\n    if (a >= 0) {\n        return a % b;\n    }\n    else {\n        return ((a % b) + b) % b;\n    }\n}\nfunction mod7(a) {\n    return modulo(a, 7);\n}\nfunction mod12(a) {\n    return modulo(a, 12);\n}\nexport { Circle, modulo, mod7, mod12 };\n","import { Circle, modulo, mod12 } from './math';\nimport { accidentalToAlter, alterToAccidental } from './convert';\nimport validateNoteName from './validators/note';\nimport validateIntervalName from './validators/interval';\nvar fifths = new Circle(['F', 'C', 'G', 'D', 'A', 'E', 'B']);\nfifths.indexOf = function (noteName) {\n    var step = noteName[0], accidental = noteName.slice(1), alter = accidentalToAlter(accidental);\n    var index = this.array.indexOf(step);\n    index = index + (this.size * alter);\n    return index - 1;\n};\nfifths.atIndex = function (index) {\n    index = index + 1;\n    var alter = Math.floor(index / this.array.length), accidental = alterToAccidental(alter);\n    index = modulo(index, this.size);\n    return this.array[index] + accidental;\n};\n// these values represent the size of intervals arranged by fifths.\n// Given 4, each value is value[i] = mod7(value[i-1] + 4) with\n//   the exception that zero is avoided by setting mod7(7) = 7\nvar intervals = new Circle([4, 1, 5, 2, 6, 3, 7]);\nintervals.indexOf = function (intervalName) {\n    var parsed = validateIntervalName(intervalName).parse();\n    if (!parsed) {\n        throw new Error('Invalid interval name.');\n    }\n    var quality = parsed.quality, size = parsed.size;\n    // string to integer, make 'unison' into size 1\n    // size = size === 'U' ? 1 : parseInt(size, 10);\n    // normalize large intervals\n    size = size <= 7 ? size : modulo(size, this.size);\n    // adjust by -1 since array starts with P4 which is index -1\n    var size_index = this.array.indexOf(size) - 1;\n    // now calculate the correct index value based on the interval quality and size\n    var index, len_A, len_d;\n    if (quality === 'P' || quality === 'M') {\n        index = size_index;\n    }\n    else if (quality === 'm') {\n        index = size_index - this.size;\n    }\n    else if (quality.match(/A+/)) {\n        len_A = quality.match(/A+/)[0].length;\n        index = size_index + (this.size * len_A);\n    }\n    else if (quality.match(/d+/)) {\n        len_d = quality.match(/d+/)[0].length;\n        if (size === 1 || size === 4 || size === 5) {\n            index = size_index - (this.size * len_d);\n        }\n        else {\n            index = size_index - (this.size + (this.size * len_d));\n        }\n    }\n    return index;\n};\nintervals.atIndex = function (index) {\n    // adjustment needed since array starts with P4 which is index -1\n    var idx = index + 1;\n    // factor represents the number of trips around the circle needed\n    //   to get to index, and the sign represents the direction\n    //   negative: anticlockwise, positive: clockwise\n    var factor = Math.floor(idx / this.size);\n    // mod by the size to normalize the index now that we know the factor\n    idx = modulo(idx, this.size);\n    // the size of the resultant interval is now known\n    var size = this.array[idx].toString(10);\n    // time to calculate the quality\n    var quality = '';\n    if (factor > 0) {\n        for (var f = 0; f < factor; f += 1) {\n            quality += 'A';\n        }\n    }\n    else if (factor === 0) {\n        quality = idx < 3 ? 'P' : 'M';\n    }\n    else if (factor === -1) {\n        quality = idx < 3 ? 'd' : 'm';\n    }\n    else if (factor < -1) {\n        for (var nf = -1; nf > factor; nf -= 1) {\n            quality += 'd';\n        }\n        quality += idx < 3 ? 'd' : '';\n    }\n    return quality + size;\n};\nvar pitchNames = new Circle(['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B']);\npitchNames.indexOf = function (member) {\n    var parsed = validateNoteName(member).parse();\n    if (!parsed) {\n        throw new Error('Invalid pitch name.');\n    }\n    var alter = accidentalToAlter(parsed.accidental);\n    var step_index = this.array.indexOf(parsed.step);\n    // return pitch class if no octave given\n    if (parsed.octave === null) {\n        return mod12(step_index + alter);\n    }\n    return step_index + alter + (this.size * (parsed.octave + 1));\n};\npitchNames.atIndex = function (index) {\n    var octave = Math.floor(index / this.size) - 1;\n    var note_index = mod12(index);\n    return this.array[note_index] + octave.toString(10);\n};\nexport { fifths, intervals, pitchNames };\n","import { steps } from './primitives';\nimport validateNoteName from './validators/note';\nimport validateIntervalName from './validators/interval';\nimport { fifths, intervals } from './circles';\nfunction transpose(note_name, direction, interval) {\n    if (direction !== 'up' && direction !== 'down') {\n        throw new Error('Transpose direction must be either \"up\" or \"down\".');\n    }\n    var parsed_n = validateNoteName(note_name).parse();\n    if (!parsed_n) {\n        throw new Error('Invalid note name.');\n    }\n    var parsed_i = validateIntervalName(interval).parse();\n    if (!parsed_i) {\n        throw new Error('Invalid interval name.');\n    }\n    var factor = direction === 'up' ? 1 : -1;\n    var new_note_name = fifths.atIndex(fifths.indexOf(parsed_n.step + parsed_n.accidental) +\n        (factor * intervals.indexOf(interval)));\n    // check if octave adjustment is needed\n    if (parsed_n.octave === null) {\n        return new_note_name;\n    }\n    // octave adjustment\n    var new_octave = parsed_n.octave + (factor * Math.floor(parsed_i.size / 8));\n    var normalized_steps = parsed_i.size > 7 ? (parsed_i.size % 7) - 1 : parsed_i.size - 1;\n    if ((steps.indexOf(parsed_n.step) + normalized_steps) >= 7) {\n        new_octave += factor;\n    }\n    return new_note_name + new_octave.toString(10);\n}\n;\nfunction isString(input) {\n    return typeof input === 'string';\n}\nfunction isNumber(input) {\n    return typeof input === 'number';\n}\n// ensures that a function requiring a note (or similar type of) object as input\n//   gets an object rather than a string representation of it.\n//   'obj' will be the function used to create the object.\nfunction toObject(input, obj) {\n    if (isString(input)) {\n        input = obj(input);\n    }\n    if (typeof input !== 'object') {\n        throw new TypeError('Input must be an object or string.');\n    }\n    return input;\n}\nexport { transpose, isString, isNumber, toObject };\n","import { mtof } from './convert';\nimport { isString, isNumber, transpose } from './utilities';\nimport { fifths, intervals, pitchNames } from './circles';\nimport validateNoteName from './validators/note';\nimport { scientificToAbc } from './abc';\nvar Note = /** @class */ (function () {\n    function Note(noteInput) {\n        var name;\n        if (isString(noteInput)) {\n            name = noteInput;\n        }\n        else if (isNumber(noteInput)) {\n            name = pitchNames.atIndex(noteInput);\n        }\n        else {\n            throw new TypeError('Note name must be a string or number.');\n        }\n        var parsed = validateNoteName(name).parse();\n        if (!parsed) {\n            throw new Error('Invalid note name.');\n        }\n        this.name = name;\n        this.type = 'note';\n        this.pitchClass = pitchNames.indexOf(parsed.step + parsed.accidental);\n        this.parts = {\n            step: parsed.step,\n            accidental: parsed.accidental\n        };\n        if (parsed.octave !== null) {\n            this.setOctave(parsed.octave);\n        }\n    }\n    Note.prototype.setOctave = function (octave) {\n        if (!isNumber(octave)) {\n            throw new TypeError('Octave must be a number.');\n        }\n        this.name = this.parts.step + this.parts.accidental;\n        this.type = 'pitch';\n        this.octave = octave;\n        this.scientific = this.name + octave.toString(10);\n        this.abc = scientificToAbc(this.scientific);\n        this.midi = pitchNames.indexOf(this.scientific);\n        this.frequency = mtof(this.midi);\n    };\n    Note.prototype.isEquivalent = function (other) {\n        other = toNote(other);\n        if (this.name !== other.name) {\n            return false;\n        }\n        if (this.type === 'pitch' && other.type === 'pitch' && this.octave !== other.octave) {\n            return false;\n        }\n        return true;\n    };\n    Note.prototype.isEnharmonic = function (other) {\n        var otherNote = toNote(other);\n        if (this.pitchClass !== otherNote.pitchClass) {\n            return false;\n        }\n        if (this.type === 'pitch' && otherNote.type === 'pitch' && (Math.abs(this.midi - otherNote.midi) > 11)) {\n            return false;\n        }\n        return true;\n    };\n    Note.prototype.transpose = function (direction, interval) {\n        return new Note(transpose(this.type === 'pitch' ? this.scientific : this.name, direction, interval));\n    };\n    Note.prototype.intervalTo = function (note) {\n        var otherNote = toNote(note);\n        return intervals.atIndex(fifths.indexOf(otherNote.name) - fifths.indexOf(this.name));\n    };\n    Note.prototype.intervalFrom = function (note) {\n        var otherNote = toNote(note);\n        return intervals.atIndex(fifths.indexOf(this.name) - fifths.indexOf(otherNote.name));\n    };\n    Note.prototype.up = function (interval) {\n        return this.transpose('up', interval);\n    };\n    Note.prototype.down = function (interval) {\n        return this.transpose('down', interval);\n    };\n    Note.prototype.toString = function () {\n        var name;\n        if (this.type === 'note') {\n            name = this.name;\n        }\n        else if (this.type === 'pitch') {\n            name = this.scientific;\n        }\n        return '[note ' + name + ']';\n    };\n    return Note;\n}());\nfunction toNote(input) {\n    if (isString(input)) {\n        return new Note(input);\n    }\n    else {\n        return input;\n    }\n}\nexport default Note;\n","import { makeValidation } from '../regex';\nfunction validateAbcNoteName(abcNoteName) {\n    var abcRegex = /((?:\\_|\\=|\\^)*)([a-g]|[A-G])((?:\\,|\\')*)/;\n    return makeValidation('abc-note', abcRegex, function (captures) {\n        return {\n            accidental: captures[1] ? captures[1] : '',\n            step: captures[2],\n            adjustments: captures[3] ? captures[3] : ''\n        };\n    })(abcNoteName);\n}\n;\nexport default validateAbcNoteName;\n","import Note from './note';\nimport { accidentalToAlter, alterToAccidental } from './convert';\nimport validateNoteName from './validators/note';\nimport validateAbcNoteName from './validators/abc-note';\nfunction abc(abcInput) {\n    var sci = abcToScientific(abcInput);\n    return new Note(sci);\n}\nvar accidentals = {\n    \"_\": -1,\n    \"=\": 0,\n    \"^\": 1\n};\n// octave adjustments\nvar adjustments = {\n    \",\": -1,\n    \"'\": 1\n};\nfunction abcToScientific(abcInput) {\n    var parsed = validateAbcNoteName(abcInput).parse();\n    if (!parsed) {\n        throw new Error('Cannot convert ABC to scientific notation. Invalid ABC note name.');\n    }\n    var step;\n    var alter = 0;\n    var accidental;\n    var octave;\n    // if parsed step is a capital letter\n    if (/[A-G]/.test(parsed.step)) {\n        octave = 4;\n    }\n    else { // parsed step is lowercase\n        octave = 5;\n    }\n    // get the total alter value of all accidentals present\n    for (var c = 0; c < parsed.accidental.length; c++) {\n        alter += accidentals[parsed.accidental[c]];\n    }\n    // for each comma or apostrophe adjustment, adjust the octave value\n    for (var d = 0; d < parsed.adjustments.length; d++) {\n        octave += adjustments[parsed.adjustments[d]];\n    }\n    step = parsed.step.toUpperCase();\n    accidental = alterToAccidental(alter);\n    var output = step + accidental + octave.toString(10);\n    if (!validateNoteName(output).valid) {\n        throw new Error('Something went wrong converting ABC to scientific notation. Output invalid.');\n    }\n    return output;\n}\n;\nfunction scientificToAbc(scientific) {\n    var parsed = validateNoteName(scientific).parse();\n    if (!parsed || parsed.octave === null) {\n        throw new Error('Cannot convert scientific to ABC. Invalid scientific note name.');\n    }\n    var abc_accidental = '', abc_step, abc_octave = '';\n    var alter = accidentalToAlter(parsed.accidental);\n    // add abc accidental symbols until alter is consumed (alter === 0)\n    while (alter < 0) {\n        abc_accidental += '_';\n        alter += 1;\n    }\n    while (alter > 0) {\n        abc_accidental += '^';\n        alter -= 1;\n    }\n    // step must be lowercase for octaves above 5\n    // add apostrophes or commas to get abc_octave\n    //   to the correct value\n    var o = parsed.octave;\n    if (o >= 5) {\n        abc_step = parsed.step.toLowerCase();\n        for (; o > 5; o--) {\n            abc_octave += '\\'';\n        }\n    }\n    else {\n        abc_step = parsed.step.toUpperCase();\n        for (; o < 4; o++) {\n            abc_octave += ',';\n        }\n    }\n    var output = abc_accidental + abc_step + abc_octave;\n    if (!validateAbcNoteName(output).valid) {\n        throw new Error('Something went wrong converting scientific to ABC. Output invalid.');\n    }\n    return output;\n}\n;\nexport default abc;\nexport { abcToScientific, scientificToAbc };\n","import { makeValidation } from '../regex';\nfunction validateKeyName(keyName) {\n    var keyRegex = /^([A-G])(b+|\\#+|x+)* ?(m|major|minor)?$/i;\n    return makeValidation('key', keyRegex, function (captures) {\n        return {\n            step: captures[1],\n            accidental: captures[2] ? captures[2] : '',\n            quality: captures[3] ? captures[3] : ''\n        };\n    })(keyName);\n}\n;\nexport default validateKeyName;\n","import validateKeyName from './validators/key';\nimport { fifths } from './circles';\nvar Key = /** @class */ (function () {\n    function Key(keyInput) {\n        // run input through validation\n        var parsed = validateKeyName(keyInput).parse();\n        if (!parsed) {\n            throw new Error('Invalid key name: ' + keyInput.toString());\n        }\n        // assign mode based on the parsed input's quality\n        if (/[a-g]/.test(parsed.step) || parsed.quality === 'minor' || parsed.quality === 'm') {\n            this.mode = 'minor';\n        }\n        else {\n            this.mode = 'major';\n        }\n        // now that we have the mode, enforce uppercase for root note\n        parsed.step = parsed.step.toUpperCase();\n        // get fifths for major key\n        this.fifths = fifths.indexOf(parsed.step + parsed.accidental);\n        // minor is 3 fifths less than major\n        if (this.mode === 'minor') {\n            this.fifths -= 3;\n            this.name = parsed.step.toLowerCase() + parsed.accidental + ' minor';\n        }\n        else {\n            this.name = parsed.step + parsed.accidental + ' major';\n        }\n    }\n    return Key;\n}());\nexport default Key;\n","import validateIntervalName from './validators/interval';\nvar Interval = /** @class */ (function () {\n    function Interval(intervalName) {\n        var parsed = validateIntervalName(intervalName).parse();\n        if (!parsed) {\n            throw new Error('Invalid interval name.');\n        }\n        this.steps = parsed.size - 1;\n        var normalizedSize = parsed.size > 7 ? (this.steps % 7) + 1 : parsed.size;\n        this.name = intervalName;\n        this.type = 'interval';\n        this.quality = parsed.quality;\n        this.size = parsed.size;\n        this.normalized = this.quality + normalizedSize.toString(10);\n        this.species = getIntervalSpecies(normalizedSize);\n        // this is kinda ugly but it works...\n        //   dividing by 7 evenly returns an extra octave if the value is a multiple of 7\n        this.octaves = Math.floor(this.size / 7.001);\n        this.semitones = getIntervalSemitones(this.quality, normalizedSize, this.octaves, this.species);\n    }\n    return Interval;\n}());\nfunction getIntervalSemitones(quality, normalizedSize, octaves, species) {\n    // semitones from root of each note of the major scale\n    var major = [0, 2, 4, 5, 7, 9, 11];\n    // qualityInt represents the integer difference from a major or perfect quality interval\n    //   for example, m3 will yield -1 since a minor 3rd is one semitone less than a major 3rd\n    var qualityInt = 0;\n    var q1 = quality.slice(0, 1);\n    switch (q1) {\n        case 'P':\n        case 'M':\n            break;\n        case 'm':\n            qualityInt -= 1;\n            break;\n        case 'A':\n            qualityInt += 1;\n            break;\n        case 'd':\n            if (species === 'M') {\n                qualityInt -= 2;\n            }\n            else {\n                qualityInt -= 1;\n            }\n            break;\n    }\n    // handle additional augmentations or diminutions\n    for (var q = 0; q < quality.slice(1).length; q++) {\n        if (quality.slice(1)[q] === 'd') {\n            qualityInt -= 1;\n        }\n        else if (quality.slice(1)[q] === 'A') {\n            qualityInt += 1;\n        }\n    }\n    return major[normalizedSize - 1] + qualityInt + (octaves * 12);\n}\n// 1,4,5 are treated differently than other interval sizes,\n//   this helps to identify them immediately\nfunction getIntervalSpecies(size) {\n    if (size === 1 || size === 4 || size === 5) {\n        return 'P';\n    }\n    else {\n        return 'M';\n    }\n}\nexport default Interval;\n","import { toObject, isString } from './utilities';\nimport Note from './note';\nimport NoteCollection from './note-collection';\nvar Pattern = /** @class */ (function () {\n    function Pattern(intervals) {\n        this.intervalNames = intervals;\n    }\n    Pattern.prototype.from = function (item) {\n        var note = toObject(item, toNote);\n        return new NoteCollection(this.intervalNames.map(function (d) {\n            if (d === 'R')\n                d = 'P1';\n            return note.up(d);\n        }));\n    };\n    return Pattern;\n}());\nfunction toNote(item) {\n    if (isString(item)) {\n        return new Note(item);\n    }\n    else {\n        return item;\n    }\n}\nexport default Pattern;\n","import Note from './note';\nimport Interval from './interval';\nimport { toObject } from './utilities';\nimport Pattern from './pattern';\nvar NoteCollection = /** @class */ (function () {\n    function NoteCollection(noteArray) {\n        if (noteArray === void 0) { noteArray = []; }\n        this.array = noteArray.map(function (d) {\n            return toObject(d, toNote);\n        });\n    }\n    NoteCollection.prototype.contents = function () {\n        return this.array;\n    };\n    NoteCollection.prototype.each = function (fn) {\n        this.array.forEach(fn);\n        return this;\n    };\n    NoteCollection.prototype.contains = function (item) {\n        var note = toObject(item, toNote);\n        var output = false;\n        this.each(function (d) {\n            if (d.isEquivalent(note))\n                output = true;\n        });\n        return output;\n    };\n    NoteCollection.prototype.add = function (item) {\n        var note = toObject(item, toNote);\n        this.array.push(note);\n        return this;\n    };\n    NoteCollection.prototype.remove = function (item) {\n        var note = toObject(item, toNote);\n        this.array = this.array.filter(function (d) {\n            return !d.isEquivalent(note);\n        });\n        return this;\n    };\n    NoteCollection.prototype.map = function (fn) {\n        return new NoteCollection(this.array.map(fn));\n    };\n    NoteCollection.prototype.names = function () {\n        return this.array.map(function (d) {\n            return d.name;\n        });\n    };\n    NoteCollection.prototype.patternFrom = function (item) {\n        var note = toObject(item, toNote);\n        if (!this.contains(note))\n            return new Pattern([]);\n        var intervals = [];\n        this.each(function (d) {\n            intervals.push(new Interval(d.intervalFrom(note)));\n        });\n        intervals.sort(function (a, b) {\n            return a.size - b.size;\n        });\n        intervals = intervals.map(function (d) {\n            var name = d.name !== 'P1' ? d.name : 'R';\n            return name;\n        });\n        return new Pattern(intervals);\n    };\n    ;\n    return NoteCollection;\n}());\nfunction toNote(string) {\n    return new Note(string);\n}\nexport default NoteCollection;\n","import { makeValidation } from '../regex';\nfunction validateChordName(chordName) {\n    // lets split up this ugly regex\n    var intro = /^/, root_note = /([A-G](?:b+|\\#+|x+)?)/, species = /((?:maj|min|sus|aug|dim|mmaj|m|\\-)?(?:\\d+)?(?:\\/\\d+)?)?/, alterations = /((?:(?:add|sus)(?:\\d+)|(?:sus|alt)|(?:\\#|\\+|b|\\-)(?:\\d+))*)/, bass_slash = /(\\/)?/, bass_note = /([A-G](?:b+|\\#+|x+)?)?/, outro = /$/;\n    var chordRegex = new RegExp(intro.source +\n        root_note.source +\n        species.source +\n        alterations.source +\n        bass_slash.source +\n        bass_note.source +\n        outro.source);\n    return makeValidation('chord', chordRegex, function (captures) {\n        return {\n            root: captures[1],\n            species: captures[2] ? captures[2] : '',\n            alterations: captures[3] ? captures[3] : '',\n            slash: captures[4] ? captures[4] : '',\n            bass: captures[5] ? captures[5] : ''\n        };\n    })(chordName);\n}\n;\nexport default validateChordName;\n","import validateIntervalName from './validators/interval';\nimport { splitStringByPattern } from './regex';\nfunction piaCompare(a, b) {\n    var qualities = ['d', 'm', 'P', 'M', 'A'];\n    if (a.size < b.size) {\n        return -1;\n    }\n    else if (a.size > b.size) {\n        return 1;\n    }\n    else {\n        if (qualities.indexOf(a.quality) < qualities.indexOf(b.quality)) {\n            return -1;\n        }\n        else if (qualities.indexOf(a.quality) > qualities.indexOf(b.quality)) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isFalse(thing) {\n    return thing === false;\n}\nvar ParsedIntervalArray = /** @class */ (function () {\n    function ParsedIntervalArray(intervalArray) {\n        this.array = [];\n        for (var i = 0; i < intervalArray.length; i++) {\n            if (intervalArray[i] === 'R') {\n                this.array.push({ quality: 'P', size: 1 });\n            }\n            else {\n                var parsed = validateIntervalName(intervalArray[i]).parse();\n                if (!isFalse(parsed))\n                    this.array.push(parsed);\n            }\n        }\n    }\n    ParsedIntervalArray.prototype.sort = function () {\n        return this.array.sort(piaCompare);\n    };\n    ParsedIntervalArray.prototype.add = function (interval) {\n        var pInterval = validateIntervalName(interval).parse();\n        if (!isFalse(pInterval)) {\n            for (var i = 0; i < this.array.length; i++) {\n                if (this.array[i].size === pInterval.size && this.array[i].quality === pInterval.quality) {\n                    return;\n                }\n            }\n            this.array.push(pInterval);\n            this.sort();\n        }\n    };\n    ParsedIntervalArray.prototype.remove = function (size) {\n        // alias is the octave equivalent of size, for instance\n        //   the alias of 2 is 9, alias of 13 is 6\n        var alias = size <= 7 ? size + 7 : size - 7;\n        var updated = [];\n        // add all intervals that are not of the given size or its alias\n        for (var i = 0; i < this.array.length; i++) {\n            if (this.array[i].size !== size && this.array[i].size !== alias) {\n                updated.push(this.array[i]);\n            }\n        }\n        this.array = updated;\n    };\n    ParsedIntervalArray.prototype.update = function (interval) {\n        var pInterval = validateIntervalName(interval).parse();\n        if (!isFalse(pInterval)) {\n            // remove any intervals of the same size\n            this.remove(pInterval.size);\n            // add the new interval\n            this.array.push(pInterval);\n            this.sort();\n        }\n    };\n    ParsedIntervalArray.prototype.unparse = function () {\n        this.sort();\n        var output = [];\n        for (var i = 0; i < this.array.length; i++) {\n            var str = this.array[i].quality + this.array[i].size;\n            if (str === 'P1') {\n                output.push('R');\n            }\n            else {\n                output.push(str);\n            }\n        }\n        return output;\n    };\n    return ParsedIntervalArray;\n}());\nvar applyAlterations = (function () {\n    var alteration_regex = /^(?:(?:add|sus|no)(?:\\d+)|(?:sus|alt)|(?:n|b|\\#|\\+|\\-)(?:\\d+))/;\n    // applies to alterations of the form (operation)(degree) such as 'b5' or '#9'\n    var toInterval = function (alteration) {\n        var valid = /(?:n|b|\\#|\\+|\\-)(?:\\d+)/;\n        if (!valid.test(alteration)) {\n            return false;\n        }\n        var operation = alteration.slice(0, 1);\n        var degree = alteration.slice(1);\n        if (operation === '+') {\n            operation = '#';\n        }\n        if (operation === '-') {\n            operation = 'b';\n        }\n        if (operation === '#') {\n            return 'A' + degree;\n        }\n        if (operation === 'b') {\n            if (degree === '5' || degree === '11' || degree === '4') {\n                return 'd' + degree;\n            }\n            else {\n                return 'm' + degree;\n            }\n        }\n        if (operation === 'n') {\n            if (degree === '5' || degree === '11' || degree === '4') {\n                return 'P' + degree;\n            }\n            else {\n                return 'M' + degree;\n            }\n        }\n    };\n    /* might want this later\n      var intervalType = function(parsed_interval) {\n        if (parsed_interval.quality === 'P' || parsed_interval.quality === 'M') {\n          return 'natural';\n        } else {\n          return 'altered';\n        }\n      };\n    */\n    var alterationType = function (alteration) {\n        if (/sus/.test(alteration)) {\n            return 'susX';\n        }\n        if (/add/.test(alteration)) {\n            return 'addX';\n        }\n        if (/no/.test(alteration)) {\n            return 'noX';\n        }\n        if (/alt/.test(alteration)) {\n            return 'alt';\n        }\n        return 'binary';\n    };\n    function getNaturalInterval(size) {\n        var normalized = size < 8 ? size : size % 7;\n        if (normalized === 1 || normalized === 4 || normalized === 5) {\n            return 'P' + size.toString(10);\n        }\n        else {\n            return 'M' + size.toString(10);\n        }\n    }\n    return function (intervalArray, alterations) {\n        var pia = new ParsedIntervalArray(intervalArray);\n        var alterationArray = splitStringByPattern(alterations, alteration_regex);\n        // for each alteration...\n        for (var a = 0; a < alterationArray.length; a++) {\n            var thisAlteration = alterationArray[a];\n            switch (alterationType(thisAlteration)) {\n                case 'binary':\n                    var asInterval = toInterval(thisAlteration);\n                    pia.update(asInterval);\n                    break;\n                case 'susX':\n                    pia.remove(3);\n                    pia.add('P4');\n                    break;\n                case 'addX':\n                    var addition = parseInt(thisAlteration.slice(3), 10);\n                    pia.add(getNaturalInterval(addition));\n                    break;\n                case 'noX':\n                    var removal = parseInt(thisAlteration.slice(2), 10);\n                    pia.remove(removal);\n                    break;\n                case 'alt':\n                    pia.update('d5');\n                    pia.add('A5');\n                    pia.update('m9');\n                    pia.add('A9');\n                    pia.update('m13');\n                    break;\n            }\n        }\n        return pia.unparse();\n    };\n})();\nexport { ParsedIntervalArray, applyAlterations };\n","import Note from './note';\nimport NoteCollection from './note-collection';\nimport validateChordName from './validators/chord';\nimport { applyAlterations } from './palette';\nvar Chord = /** @class */ (function () {\n    function Chord(chordName) {\n        var parsed = validateChordName(chordName).parse();\n        if (!parsed) {\n            throw new Error('Invalid chord name.');\n        }\n        var speciesIntervals = getSpeciesIntervals(parsed.species);\n        var memberIntervals = applyAlterations(speciesIntervals, parsed.alterations);\n        this.name = chordName;\n        this.type = 'chord';\n        this.root = new Note(parsed.root);\n        this.formula = parsed.species + parsed.alterations;\n        this.isSlash = parsed.slash === '/' ? true : false;\n        this.bass = this.isSlash ? new Note(parsed.bass) : this.root;\n        this.intervals = memberIntervals;\n        this.notes = getChordNotes(this.intervals, this.root);\n    }\n    Chord.prototype.transpose = function (direction, interval) {\n        var root = this.root.transpose(direction, interval);\n        return new Chord(root.name + this.formula);\n    };\n    Chord.prototype.toString = function () {\n        return '[chord ' + this.name + ']';\n    };\n    return Chord;\n}());\nfunction getChordNotes(intervals, root) {\n    var output = [];\n    output.push(root);\n    for (var i = 1; i < intervals.length; i++) {\n        output.push(root.up(intervals[i]));\n    }\n    return new NoteCollection(output);\n}\nvar getSpeciesIntervals = (function () {\n    var basic_types = {\n        five: ['R', 'P5'],\n        maj: ['R', 'M3', 'P5'],\n        min: ['R', 'm3', 'P5'],\n        aug: ['R', 'M3', 'A5'],\n        dim: ['R', 'm3', 'd5'],\n        sus2: ['R', 'M2', 'P5'],\n        sus4: ['R', 'P4', 'P5']\n    };\n    var extensions = {\n        nine: ['M9'],\n        eleven: ['M9', 'P11'],\n        thirteen: ['M9', 'P11', 'M13']\n    };\n    var species_regex = /^(maj|min|mmin|m|aug|dim|alt|sus|\\-)?((?:\\d+)|(?:6\\/9))?$/;\n    return function getSpeciesIntervals(species) {\n        // easy stuff\n        if (species in basic_types) {\n            return basic_types[species];\n        }\n        if (species === '') {\n            return basic_types.maj;\n        }\n        if (species === '5') {\n            return basic_types.five;\n        }\n        if (species === 'm' || species === '-') {\n            return basic_types.min;\n        }\n        if (species === 'sus') {\n            return basic_types.sus4;\n        }\n        var output = [];\n        var captures = species_regex.exec(species);\n        var prefix = captures[1] ? captures[1] : '', degree = captures[2] ? captures[2] : '';\n        switch (prefix) {\n            case '':\n                if (degree === '6/9') {\n                    output = output.concat(basic_types.maj, ['M6', 'M9']);\n                }\n                else {\n                    output = output.concat(basic_types.maj, degree === '6' ? 'M6' : 'm7');\n                }\n                break;\n            case 'maj':\n                output = output.concat(basic_types.maj, degree === '6' ? 'M6' : 'M7');\n                break;\n            case 'min':\n            case 'm':\n            case '-':\n                output = output.concat(basic_types.min, degree === '6' ? 'M6' : 'm7');\n                break;\n            case 'aug':\n                output = output.concat(basic_types.aug, degree === '6' ? 'M6' : 'm7');\n                break;\n            case 'dim':\n                output = output.concat(basic_types.dim, 'd7');\n                break;\n            case 'mmaj':\n                output = output.concat(basic_types.min, 'M7');\n                break;\n            default:\n                break;\n        }\n        switch (degree) {\n            case '9':\n                output = output.concat(extensions.nine);\n                break;\n            case '11':\n                output = output.concat(extensions.eleven);\n                break;\n            case '13':\n                output = output.concat(extensions.thirteen);\n                break;\n            default:\n                break;\n        }\n        return output;\n    };\n})();\nexport default Chord;\n","import _abc from './abc';\nimport * as _circles from './circles';\nimport Key from './key';\nimport Note from './note';\nimport Chord from './chord';\nimport Interval from './interval';\nimport Pattern from './pattern';\nimport NoteCollection from './note-collection';\nvar motive;\n(function (motive) {\n    motive.abc = _abc;\n    motive.key = function (keyInput) {\n        return new Key(keyInput);\n    };\n    motive.note = function (noteInput) {\n        return new Note(noteInput);\n    };\n    motive.chord = function (chordInput) {\n        return new Chord(chordInput);\n    };\n    motive.interval = function (intervalInput) {\n        return new Interval(intervalInput);\n    };\n    motive.pattern = function (patternInput) {\n        return new Pattern(patternInput);\n    };\n    motive.noteCollection = function (noteCollectionInput) {\n        return new NoteCollection(noteCollectionInput);\n    };\n    motive.circles = _circles;\n    motive.constructors = {\n        Note: Note,\n        Interval: Interval,\n        Chord: Chord\n    };\n})(motive || (motive = {}));\nexport default motive;\n"],"names":["toNote","_abc"],"mappings":"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"}